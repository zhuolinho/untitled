.TH BOOT 8
.SH NAME
boot \- from power on to the login prompt
.SH DESCRIPTION
.de SP
.if t .sp 0.4
.if n .sp
..
At power on the machine reads sector zero of the boot device into memory
and executes it.  This bootstrap code loads
.BR /boot ,
the Minix Boot Monitor.  The monitor loads the kernel binaries from
.BR /minix ,
or the newest file in
.B /minix
if it is a directory.
.PP
The Minix system is now running, the different tasks initialize themselves
and control is transferred to the last one,
.BR init .
.PP
.B Init
is the grandparent of all Minix processes, it is responsible for starting
login processes on each terminal, but first it runs
.BR /etc/rc .
.PP
.B /etc/rc
checks the state of the system and starts daemons.  First it sets the
keyboard translation to the mapping in
.B /etc/keymap
if present, then it reads the time zone from
.B /etc/timeinfo
followed by a call to
.BR readclock (8)
to set Minix time from the hardware clock.  Next the file systems are checked
if necessary and the
.B /usr
file system is mounted.
.PP
The system is now ready for multiuser startup,
.B /etc/rc
starts the
.BR update (8)
and
.BR cron (8)
daemons, and initializes the network services.
.B /etc/rc
finally recovers crashed editor buffers and cleans out the
.B tmp
directories.
.PP
.B Init
reads
.B /etc/ttys
and starts a
.BR getty (8)
for each enabled terminal line to allow a user to log in.
.SH "BOOT ENVIRONMENT"
Many features of the drivers inside the kernel are controlled by
settings in the boot environment, like
.B bootopts
above does for
.BR /etc/rc .
The values of these variables are usually colon or comma separated
numbers configuring the driver.
.RB DPETH0 " = " 300 : 10
tells the ethernet driver to use I/O address 0x300, interrupt request
10, and the default memory address (0xD0000, values may be omitted) for the
first ethernet board.
.PP
The following variable settings are recognized by the kernel
.RB ( monitor (8)
names variables that are special to both the monitor and the kernel):
.TP
\fBhd\fR = \fBat\fR | \fBbios\fP | \fBps\fR | \fBesdi\fR | \fBxt\fR
Choose the driver that is to be used for the hard disk, in order: IBM/AT
(classic AT or newer IDE), BIOS (generic driver), PS/2 (some PS/2 models),
ESDI (other PS/2's), or IBM/XT.  By default the first of these drivers that
is available is used.  Most drivers are present in the kernel as distributed,
but may be taken out by modifying
.BR /usr/include/minix/config.h .
.TP
\fBbus\fR = \fBat\fR | \fBps\fR | \fBmca\fR
Set the machine type to AT, PS/2, or a PS/2 with an MCA bus.  Ninety-nine
out of hundred times the type can be determined by looking at the machine
ID bytes.  If it is guessed wrong then the machine will hang after the first
few boot messages.  You can set the
.B bus
variable to correct the situation.
.TP
\fBDPETH0 = \fII/O-addr\fR:\fIirq\fR:\fImem_addr\fR
Set the I/O address (hex), IRQ (decimal) and memory address (hex) of the
ethernet board.  By default it is configured as 280:3:D0000.  (Note that the
IRQ conflicts with the second serial line, so the serial line is turned
off if the ethernet board is configured for IRQ 3.)
.TP
\fBAHA0\fR = \fII/O-addr\fR:\fIbus-on\fR:\fIbus-off\fR:\fItr-speed\fR
Configure the Adaptec 154xA SCSI host adapter to use the given I/O address
(hex), Bus-on time (decimal), Bus-off time (decimal) and transfer speed
(hex).  The default is 330:15:1:00.  The default transfer speed is always
5.0 Mb/s (code 00) ignoring the jumper settings.
.TP
\fBsd\fIn\fR = \fItarget\fR,\fIlun\fR
Program SCSI disk
.BI sd n
to have the given target and logical unit number.  The target and lun
of a tape or other SCSI device may be changed by setting the
.BI sd n
variable that would be used had it been a disk.  So tape device st7 can be
set to target 4, lun 1 with sd35=4,1.
.SH "TCP/IP CONFIGURATION"
To use TCP/IP you have to compile a kernel with networking enabled, and
the proper board addresses configured, see the
.B DPETH0
boot variable above.  The driver supports only the Western Digital 8003 and
Western Digital 8013 ethernet cards.  Many newer variants of the WD8013, now
under the SMC brand, also work.
.PP
You are likely to use TCP/IP in one of two situations:
.PP
.RS
In a small network with no support from a "big" host.
.SP
Connected to a large network with address and name servers.
.RE
.SS "Small Network"
In a network where the Minix machine can't obtain its IP address and name
from a different host you need to run a RARP daemon.  This daemon is started
if you have an
.B /etc/ethers
file.  You also need an
.B /etc/hosts
file that lists the IP address of your machine.  In a private little
network you can use the 192.9.200.* addresses, these addresses were used
by SUN for machines without a registered network address.  They are usually
blocked at gateways.  Suppose you have two machines in your network then
.B /etc/ethers
could look like this:
.PP
.RS
.ta +20n
0:0:c0:a:77:23	darask
.br
0:0:c0:a:68:ce	burask
.RE
.PP
Use
.B hostaddr \-e
to find out what the six octet ethernet address of a host is.  Use the address
as printed: lowercase hex digits, no leading zeros.  The
.B /etc/hosts
file shows their IP addresses:
.PP
.RS
.ta +15n
127.0.0.1	localhost
.br
192.9.200.1	darask
.br
192.9.200.2	burask
.RE
.PP
.B Warning!
Do not add ethernet addresses of diskless workstations to your ethers file.
A Sun for instance has the stupid habit of booting from the first RARP server
that answers, probably your Minix machine...
.SS "Large Network"
In a network with a central network administration your machine's IP address
and name are given by the RARP and name services of the special servers on
the network.  For a new machine you need to apply for an IP address and host
name with your network administrator supplying the ethernet address of your
machine.  You don't need any configuration files now, the
.B irdpd
and
.B nonamed
daemons automatically find a router and a name server.
.PP
Note that no knowledge of the IP address or hostname of the Minix machine
itself is necessary, it all comes from the RARP and name servers.  A series
of Minix machines can therefore set up identically.  Even if you have no RARP
or name servers you can still set them up identically if you list all the
Minix hosts in the hosts and ethers files.
.PP
(The names "darask" and "burask" are names of cities from the Dutch
translation of the novel "The Many-Colored Land" by Julian May.  The author
of this text likes names of hosts to be things that contain people, like
cities and ships.)
.SH FILES
.TP 20n
/boot
Minix Boot Monitor.
.TP
/minix
Kernel image, or directory containing them.
.TP
/etc/rc
First of the system initialization files.
.TP
/etc/hosts
Name to IP address mapping.
.TP
/etc/ethers
Name to ethernet address mapping.
.SH "SEE ALSO"
.BR monitor (8),
.BR init (8),
.BR inet (8),
.BR loadkeys (8),
.BR readclock (8),
.BR fsck (1),
.BR update (8),
.BR cron (8),
.BR ttys (5),
.BR getty (8),
.BR hostaddr (1),
.BR ifconfig (8),
.BR irdpd (8),
.BR nonamed (8),
.BR rarpd (8),
.BR hosts (5),
.BR ethers (5),
.BR set_net_default (8).
.SH DIAGNOSTICS
.TP 5n
Checking File Systems.
If the system has crashed then
.B fsck
is called for the root and /usr file systems.  It is wise to reboot if the
root file system must be fixed.
.TP
Finish the name of device to mount as /usr: /dev/
If the name of the /usr file system has not been set in /etc/fstab.
You can type a device name, say
.BR fd0 .
.TP
hostaddr: unable to fetch IP address
TCP/IP misconfiguration.  The RARP may have failed because the ethernet
address of the machine is not entered in either the remote or the local
ethers file.  Either talk to your Network Administrator, or make an ethers
and a hosts file.
.TP
1.2.3.4 login:
If you see an IP address instead of a host name then the system failed to
translate the IP address.  Either talk to your Network Administrator to
have the reverse address translation tables fixed, or make a hosts file.
.SH BUGS
Indefinite hangs are possible if I/O addresses or IRQ's are wrong.  A driver
may babble about addresses and IRQ's, but that does not mean that what it
says is true, it may just be configured that way.  It is very difficult to
find peripherals on a PC automatically, and Minix doesn't try to.
.SH AUTHOR
Kees J. Bot (kjb@cs.vu.nl)
